{"mtime":1374987871,"js":"window.isMobile = {\n  Android: function() {\n    return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function() {\n    return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function() {\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function() {\n    return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function() {\n    return navigator.userAgent.match(/IEMobile/i);\n  },\n  any: function() {\n    return this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows();\n  }\n};\n\nwindow.api = {\n  ajax: function(url) {\n    return $.ajax({\n      url: url,\n      type: \"GET\",\n      dataType: \"jsonp\",\n      jsonp: \"jsonp\"\n    });\n  },\n  getHeathFeed: function() {\n    var feed_url, url;\n\n    feed_url = \"http://news.baidu.com/n?cmd=4&class=meishijk&tn=rss\";\n    url = 'http://ajax.googleapis.com/ajax/services/feed/load?v=2.0&num=10&callback=?&q=' + encodeURIComponent(feed_url);\n    console.log(url);\n    return this.ajax(url);\n  }\n};\n\nwindow.tools = {\n  updateIdeal: function() {\n    var ideal, li, map, part, _i, _len, _ref;\n\n    ideal = this.calcIdealHealth($.jStorage.get(\"sex\"), $.jStorage.get(\"weight\"), $.jStorage.get(\"height\"));\n    map = {\n      head: \"臉部\",\n      chest: \"胸圍\",\n      belly: \"腰圍\",\n      hand: \"手臂圍\",\n      leg: \"大腿圍\"\n    };\n    li = \"\";\n    _ref = [\"chest\", \"belly\", \"hand\", \"leg\"];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      part = _ref[_i];\n      li += \"<li>你的最佳\" + map[part] + \"是 <span class=\\\"green\\\">\" + (Number(ideal[part]).toFixed(2)) + \" cm</span></li>\";\n    }\n    return $('#idealList').empty().append(li);\n  },\n  updateNutrition: function() {\n    var color, detail, ideal, li, map, part, text, _i, _len, _ref;\n\n    ideal = this.calcIdealHealth($.jStorage.get(\"sex\"), $.jStorage.get(\"weight\"), $.jStorage.get(\"height\"));\n    map = {\n      head: \"臉部\",\n      chest: \"胸圍\",\n      belly: \"腰圍\",\n      hand: \"手臂圍\",\n      leg: \"大腿圍\"\n    };\n    li = \"\";\n    _ref = [\"chest\", \"belly\", \"hand\", \"leg\"];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      part = _ref[_i];\n      if (ideal.test(part, $.jStorage.get(part))) {\n        color = \"-positive\";\n        text = \"通過\";\n        detail = \"\";\n      } else {\n        color = \"-negative\";\n        text = \"不通過\";\n        detail = \"建議多吃：\" + _.keys(window.food_map[part].lose);\n      }\n      li += \"<li><h2>你的「\" + map[part] + \"」評估</h2><div>\" + ($.jStorage.get(part)) + \" -> \" + (ideal[part].toFixed(2)) + \"</div><div>\" + detail + \"</div><span class=\\\"count\" + color + \"\\\">\" + text + \"</span></li>\";\n    }\n    return $('#nutritionList').empty().append(li);\n  },\n  updateReciple: function() {\n    var id, ideal, self, _i, _len, _ref;\n\n    ideal = this.calcIdealHealth($.jStorage.get(\"sex\"), $.jStorage.get(\"weight\"), $.jStorage.get(\"height\"));\n    _ref = [\"touch-area-head\", \"touch-area-belly\", \"touch-area-chest\", \"touch-area-hand-left\", \"touch-area-hand-right\", \"touch-area-leg-left\", \"touch-area-leg-right\"];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      id = _ref[_i];\n      $(\".\" + id).empty().off('click');\n    }\n    self = this;\n    $('.touch-area-head').createVegetable(this.randomLoseVeg('head'), 100).click(function() {\n      return $('.touch-area-head').empty().createVegetable(self.randomLoseVeg('head'));\n    });\n    if (!ideal.test(\"chest\", $.jStorage.get(\"chest\"))) {\n      $('.touch-area-chest').createVegetable(this.randomLoseVeg('chest')).click(function() {\n        return $('.touch-area-chest').empty().createVegetable(self.randomLoseVeg('chest'));\n      });\n    }\n    if (!ideal.test(\"belly\", $.jStorage.get(\"belly\"))) {\n      $('.touch-area-belly').createVegetable(this.randomLoseVeg('belly')).click(function() {\n        return $('.touch-area-belly').empty().createVegetable(self.randomLoseVeg('belly'));\n      });\n    }\n    if (!ideal.test(\"hand\", $.jStorage.get(\"hand\"))) {\n      $('.touch-area-hand-left, .touch-area-hand-right').createVegetable(this.randomLoseVeg('hand')).click(function() {\n        return $('.touch-area-hand-left, .touch-area-hand-right').empty().createVegetable(self.randomLoseVeg('hand'));\n      });\n    }\n    if (!ideal.test(\"leg\", $.jStorage.get(\"leg\"))) {\n      return $('.touch-area-leg-left, .touch-area-leg-right').createVegetable(this.randomLoseVeg('leg')).click(function() {\n        return $('.touch-area-leg-left, .touch-area-leg-right').empty().createVegetable(self.randomLoseVeg('leg'));\n      });\n    }\n  },\n  updateNews: function() {\n    var _this = this;\n\n    this.showLoading();\n    return window.api.getHeathFeed().done(function(data) {\n      var enti, li, _i, _len, _ref;\n\n      li = \"\";\n      _ref = data.responseData.feed.entries;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        enti = _ref[_i];\n        li += \"<li><a target=\\\"_blank\\\" href=\\\"\" + enti.link + \"\\\"><h2>\" + enti.title + \"</h2><div>\" + enti.contentSnippet + \"</div><span class=\\\"chevron\\\"></span></a></li>\";\n      }\n      $('#newsList').empty().append(li);\n      return _this.hideLoading();\n    });\n  },\n  randomLoseVeg: function(part) {\n    return this.randomSelect(_.values(window.food_map[part].lose));\n  },\n  randomSelect: function(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n  },\n  showLoading: function() {\n    this.hideLoading();\n    return $.blockUI({\n      message: \"<img src='/images/ajax-loader.gif' />\",\n      css: {\n        backgroundColor: 'transparent',\n        border: '0px'\n      }\n    });\n  },\n  hideLoading: function() {\n    return $.unblockUI();\n  },\n  clickRefresh: function(callback) {\n    return $('.refresh-button').show().off(\"click\").on(\"click\", function(e) {\n      return callback(e);\n    });\n  },\n  clickBack: function(callback) {\n    return $('.back-button').show().off(\"click\").on(\"click\", function(e) {\n      return callback(e);\n    });\n  },\n  calcBMI: function(w, h) {\n    return w / Math.pow(h / 100, 2);\n  },\n  calcIdealHealth: function(sex, w, h) {\n    var obj;\n\n    obj = sex.toString().toUpperCase() === \"M\" ? {\n      weight: (h - 100) * 0.9,\n      chest: h * 0.618,\n      waist: h * 0.4388,\n      buttock: h * 0.55,\n      hand: h * 0.2101,\n      leg: h * 0.3399,\n      bmi: this.calcBMI(w, h)\n    } : {\n      weight: (h - 100) * 0.81,\n      chest: h * 0.52,\n      waist: h * 0.37,\n      buttock: h * 0.54,\n      hand: h * 0.15,\n      leg: h * 0.31,\n      bmi: this.calcBMI(w, h)\n    };\n    obj.belly = obj.waist;\n    obj.test = function(key, val, range) {\n      if (range == null) {\n        range = 0.05;\n      }\n      if (key.toString().toUpperCase() === \"BMI\") {\n        return 18.5 <= val && val <= 24;\n      } else {\n        return this[key] * (1 - range) <= val && val <= this[key] * (1 + range);\n      }\n    };\n    return obj;\n  }\n};\n\nwindow.map = {\n  init: function(container) {\n    var m;\n\n    this.container = container;\n    m = new BMap.Map(this.container);\n    this.container = \"#\" + this.container;\n    m.centerAndZoom(new BMap.Point(116.404, 39.915), 15);\n    m.addControl(new BMap.ScaleControl());\n    m.addControl(new BMap.OverviewMapControl());\n    m.addControl(new BMap.MapTypeControl());\n    m.enableScrollWheelZoom();\n    this.map = m;\n    return this.mgr = new BMapLib.MarkerManager(m, {\n      maxZoom: 18,\n      trackMarkers: true\n    });\n  },\n  addRandomMarker: function(num) {\n    var center, h, height, marker, markers, newPixel, newPoint, pixel, realBounds, w, width;\n\n    if (num == null) {\n      num = 1;\n    }\n    width = $(this.container).width();\n    height = $(this.container).height();\n    realBounds = this.mgr._getRealBounds();\n    center = this.map.getCenter();\n    pixel = this.map.pointToPixel(center);\n    markers = [];\n    console.log(this.container, width, height);\n    while (num > 0) {\n      w = width * Math.random();\n      h = height * Math.random();\n      newPixel = {\n        x: pixel.x + (Math.random() > 0.5 ? w : -w),\n        y: pixel.y + (Math.random() > 0.5 ? h : -h)\n      };\n      newPoint = this.map.pixelToPoint(newPixel);\n      marker = new BMap.Marker(newPoint);\n      if (!realBounds.containsPoint(newPoint)) {\n        markers.push(marker);\n        num--;\n      }\n    }\n    this.mgr.addMarkers(markers);\n    return this.mgr.showMarkers();\n  }\n};\n"}